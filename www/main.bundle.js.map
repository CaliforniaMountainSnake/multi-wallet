{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://finance-app/webpack/runtime/chunk loaded","webpack://finance-app/webpack/runtime/load script","webpack://finance-app/webpack/runtime/css loading","webpack://finance-app/./src/components/TopLevelErrorBoundary.tsx","webpack://finance-app/./src/repositories/WalletRepository.ts","webpack://finance-app/./src/repositories/BasicIndexedDBRepository.ts","webpack://finance-app/./src/components/Utils/LoadingButton.tsx","webpack://finance-app/./src/helpers.ts","webpack://finance-app/./src/components/ExchangeRatesUpdater.tsx","webpack://finance-app/./src/validation/Validator.ts","webpack://finance-app/./src/components/Amounts/AmountQuantityTd.tsx","webpack://finance-app/./src/components/Amounts/AmountRow.tsx","webpack://finance-app/./src/components/Utils/CurrencySelect.tsx","webpack://finance-app/./src/components/Amounts/AmountTotalRow.tsx","webpack://finance-app/./src/components/Amounts/AddNewAmount.tsx","webpack://finance-app/./src/components/Amounts/AmountsTable.tsx","webpack://finance-app/./src/repositories/CoingeckoRepository.ts","webpack://finance-app/./src/components/UserRates/AddNewRate.tsx","webpack://finance-app/./src/components/UserRates/UserRatesTable.tsx","webpack://finance-app/./src/components/Themes/ThemeLoader.tsx","webpack://finance-app/./src/components/App.tsx","webpack://finance-app/./src/index.tsx","webpack://finance-app/webpack/bootstrap","webpack://finance-app/webpack/runtime/compat get default export","webpack://finance-app/webpack/runtime/define property getters","webpack://finance-app/webpack/runtime/ensure chunk","webpack://finance-app/webpack/runtime/get javascript chunk filename","webpack://finance-app/webpack/runtime/get mini-css chunk filename","webpack://finance-app/webpack/runtime/global","webpack://finance-app/webpack/runtime/hasOwnProperty shorthand","webpack://finance-app/webpack/runtime/make namespace object","webpack://finance-app/webpack/runtime/publicPath","webpack://finance-app/webpack/runtime/jsonp chunk loading","webpack://finance-app/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"finance-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"63\":1,\"142\":1,\"345\":1,\"388\":1,\"843\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","import React, {ErrorInfo, ReactNode} from \"react\";\n\ninterface State {\n    error?: Error;\n}\n\nexport class TopLevelErrorBoundary extends React.Component<{ children: ReactNode }, State> {\n    state: State = {};\n\n    static getDerivedStateFromError(error: Error): State {\n        // Update state so the next render will show the fallback UI.\n        return {error: error};\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n        console.error(\"Unhandled top-level error:\", error, errorInfo);\n    }\n\n    render(): ReactNode {\n        if (this.state.error) {\n            return (\n                <React.Fragment>\n                    <h1>Oops, something went wrong...</h1>\n                    <figure>\n                        <figcaption>{this.state.error.name}</figcaption>\n                        <p>{this.state.error.message}</p>\n                    </figure>\n                </React.Fragment>\n            );\n        }\n        return (<React.StrictMode>{this.props.children}</React.StrictMode>);\n    }\n}\n","import {BtcRate} from \"./CoingeckoRepository\";\nimport {BasicIndexedDBRepository} from \"./BasicIndexedDBRepository\";\n\nexport class WalletRepository extends BasicIndexedDBRepository {\n    private storeNames = {\n        configs: \"configs\",\n        exchangeRates: \"exchange_rates\",\n        userRates: \"user_exchange_rates\",\n        amounts: \"amounts\",\n    };\n\n    get dbName(): string {\n        return \"multi-wallet-app\";\n    }\n\n    get dbVersion(): number {\n        return 5;\n    }\n\n    getMigrations(): Map<number, (db: IDBDatabase, transaction: IDBTransaction) => Promise<void>> {\n        const map = new Map<number, (db: IDBDatabase, transaction: IDBTransaction) => Promise<void>>();\n        map.set(1, async (db: IDBDatabase) => {\n            db.createObjectStore(this.storeNames.configs, {keyPath: \"key\"});\n        });\n        map.set(2, async (db: IDBDatabase) => {\n            db.createObjectStore(this.storeNames.exchangeRates, {keyPath: \"symbol\"});\n        });\n        map.set(3, async (db: IDBDatabase) => {\n            db.createObjectStore(this.storeNames.amounts, {autoIncrement: true});\n        });\n        map.set(4, async (db: IDBDatabase) => {\n            db.createObjectStore(this.storeNames.userRates, {autoIncrement: true});\n        });\n        map.set(5, async (db: IDBDatabase, transaction: IDBTransaction) => {\n            // Add a new \"enabled\" property to all amounts.\n            const store = transaction.objectStore(this.storeNames.amounts);\n            const amounts = await this.promiseCursorRequest<number, Amount>(store.openCursor());\n            for (const [key, amount] of amounts) {\n                amount.enabled = true;\n                store.put(amount, key);\n            }\n        });\n        return map;\n    }\n\n    /**\n     * Get config value.\n     *\n     * @see https://stackoverflow.com/a/72021643\n     */\n    async getConfig<K extends ConfigKey>(key: K): Promise<ConfigValue<K> | undefined> {\n        const conf: Config | undefined = await this.getByKey(this.storeNames.configs, key);\n        return conf?.value as any;// I have no ideas why we need to assert \"any\" here...\n    }\n\n    async setConfig(conf: Config): Promise<void> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(this.storeNames.configs);\n            await this.promiseRequest(store.put(conf));\n        });\n    }\n\n    async getAmounts(): Promise<Map<number, Amount>> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(this.storeNames.amounts);\n            return await this.promiseCursorRequest<number, Amount>(store.openCursor());\n        }, \"readonly\");\n    }\n\n    async getAmount(key: number): Promise<Amount> {\n        return await this.getByKeyOfThrowError(this.storeNames.amounts, key);\n    }\n\n    async putAmount(amount: Amount, key?: number): Promise<IDBValidKey> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(this.storeNames.amounts);\n            return await this.promiseRequest(store.put(amount, key));\n        });\n    }\n\n    async deleteAmount(key: number): Promise<void> {\n        return await this.deleteByKey(this.storeNames.amounts, key);\n    }\n\n    async getUserRates(): Promise<Map<number, UserRate>> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(this.storeNames.userRates);\n            return await this.promiseCursorRequest<number, UserRate>(store.openCursor());\n        }, \"readonly\");\n    }\n\n    async addUserRate(rate: UserRate): Promise<IDBValidKey> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(this.storeNames.userRates);\n            return await this.promiseRequest(store.add(rate));\n        });\n    }\n\n    async deleteUserRate(key: number): Promise<void> {\n        return await this.deleteByKey(this.storeNames.userRates, key);\n    }\n\n    async getExchangeRates(): Promise<Map<string, CurrencyInfo>> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(this.storeNames.exchangeRates);\n            return await this.promiseCursorRequest<string, CurrencyInfo>(store.openCursor());\n        }, \"readonly\");\n    }\n\n    async updateExchangeRates(data: Map<string, BtcRate>): Promise<void> {\n        return await this.transaction(async transaction => {\n            const ratesStore = transaction.objectStore(this.storeNames.exchangeRates);\n            const configStore = transaction.objectStore(this.storeNames.configs);\n\n            // Save exchange rates.\n            for (const [key, value] of data.entries()) {\n                const info: CurrencyInfo = {\n                    symbol: key,\n                    name: value.name,\n                    unit: value.unit,\n                    value: value.value,\n                    type: value.type\n                };\n                ratesStore.put(info);\n            }\n\n            // Set last update timestamp.\n            const conf: Config = {\n                key: \"last_update_timestamp\",\n                value: Date.now()\n            };\n            await this.promiseRequest(configStore.put(conf));\n        });\n    }\n}\n\nexport interface Amount {\n    amount: number,\n    symbol: string,\n    enabled: boolean,\n    comment?: string\n}\n\nexport interface UserRate {\n    symbol1: string,\n    symbol2: string,\n}\n\nexport interface CurrencyInfo extends BtcRate {\n    symbol: string;\n}\n\nexport type Config = {\n    key: \"last_update_timestamp\",\n    value: number,\n} | {\n    key: \"selected_currency\",\n    value: string,\n}\n\nexport type ConfigKey = Config[\"key\"];\nexport type ConfigValue<K> = Extract<Config, { key: K }>[\"value\"];\n","export abstract class BasicIndexedDBRepository {\n    // You must not use this var before calling \"open()\".\n    private db!: IDBDatabase;\n\n    abstract get dbName(): string\n\n    abstract get dbVersion(): number\n\n    /**\n     * Get migrations. First migration must have an index \"1\".\n     */\n    abstract getMigrations(): Map<number, (db: IDBDatabase, transaction: IDBTransaction) => Promise<void>>\n\n    async open(onUpgradeError: (error: Error) => void): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const request: IDBOpenDBRequest = indexedDB.open(this.dbName, this.dbVersion);\n            request.onupgradeneeded = event => {\n                this.migrateIndexedDB(event, request.result, request.transaction!)\n                    .catch((error: Error) => onUpgradeError(error));\n            };\n            request.onblocked = event => this.onBlocked(event);\n            request.onerror = () => reject(request.error);\n            request.onsuccess = () => {\n                this.db = request.result;\n                resolve();\n                console.debug(`IndexedDB \"${this.dbName}\" has been opened.`);\n            };\n        });\n    }\n\n    async deleteIndexedDB(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            // At first, close the connection to avoid \"onblocked\" event.\n            this.db.close();\n\n            // Delete the DB.\n            const request = indexedDB.deleteDatabase(this.dbName);\n            request.onblocked = event => this.onBlocked(event);\n            request.onerror = () => reject(request.error);\n            request.onsuccess = () => resolve();\n        });\n    }\n\n    /**\n     * Delete a row.\n     * Be sure to convert the key to a number when the DB key has a number type.\n     *\n     * Warning! The delete methods always return to success event handler with undefined as result\n     * whether given key was deleted or not.\n     *\n     * @see https://stackoverflow.com/a/14330794\n     */\n    protected async deleteByKey(storeName: string, key: IDBValidKey): Promise<void> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(storeName);\n            return await this.promiseRequest(store.delete(key));\n        });\n    }\n\n    protected async getByKey(storeName: string, key: IDBValidKey): Promise<any> {\n        return await this.transaction(async transaction => {\n            const store = transaction.objectStore(storeName);\n            return await this.promiseRequest(store.get(key));\n        }, \"readonly\");\n    }\n\n    protected async getByKeyOfThrowError(storeName: string, key: IDBValidKey): Promise<any> {\n        const value = await this.getByKey(storeName, key);\n        if (value) {\n            return value;\n        }\n        throw new Error(`Unable to find a row with key: \"${key}\" in the store \"${storeName}\"`);\n    }\n\n    protected async promiseRequest<V>(request: IDBRequest<V>): Promise<V> {\n        return new Promise((resolve, reject) => {\n            request.onerror = () => reject(request.error);\n            request.onsuccess = () => resolve(request.result);\n        });\n    }\n\n    protected async promiseCursorRequest<K extends IDBValidKey, V>(\n        request: IDBRequest<IDBCursorWithValue | null>\n    ): Promise<Map<K, V>> {\n        return new Promise((resolve, reject) => {\n            const values = new Map();\n            request.onerror = () => reject(request.error);\n            request.onsuccess = () => {\n                const cursor: IDBCursorWithValue | null = request.result;\n                if (cursor) {\n                    values.set(cursor.key, cursor.value);\n                    cursor.continue();\n                } else {\n                    resolve(values);\n                }\n            };\n        });\n    }\n\n    protected async transaction<V>(\n        body: (transaction: IDBTransaction) => Promise<V>,\n        mode: \"readonly\" | \"readwrite\" = \"readwrite\"\n    ): Promise<V> {\n        return new Promise((resolve, reject) => {\n            const transaction = this.db.transaction(this.db.objectStoreNames, mode);\n            const transactionResultPromise = body(transaction);\n\n            transaction.onabort = event => reject((event.target as IDBTransaction).error);\n            transaction.oncomplete = () => {\n                transactionResultPromise\n                    .then(result => resolve(result))\n                    .catch(error => reject(error));\n            };\n        });\n    }\n\n    private onBlocked(event: Event): void {\n        // There is another connection to the DB.\n        // And this connection was not closed after firing the \"db.onversionchange\" there.\n        const msg = \"Unable to update the DB version (or delete the DB)!\"\n            + \" There is an another connection to the same DB.\"\n            + \" Please, close another tabs before update.\";\n        console.warn(msg, event);\n        alert(msg);\n    }\n\n    private async migrateIndexedDB(event: IDBVersionChangeEvent, db: IDBDatabase, transaction: IDBTransaction): Promise<void> {\n        console.warn(`IndexedDB upgrade needed! [${event.oldVersion} to ${event.newVersion}]`);\n        if (!event.newVersion) {\n            console.debug(\"Database is being deleted...\");\n            return;\n        }\n\n        const migrations = this.getMigrations();\n        for (let i = event.oldVersion + 1; i <= event.newVersion; i++) {\n            const migration = migrations.get(i);\n            if (!migration) {\n                throw new Error(`Migration \"${i}\" does not exist!`);\n            }\n\n            event.target;\n            await migration(db, transaction);\n            console.debug(`Migration \"${i}\" has been applied.`);\n        }\n        console.debug(\"All migrations have been applied.\");\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {Button, ButtonProps} from \"react-bootstrap\";\nimport {ButtonVariant} from \"react-bootstrap/types\";\n\ninterface State {\n    loading: boolean;\n}\n\nexport class LoadingButton<T> extends React.Component<{\n    children: ReactNode,\n    onClick: (payload?: T) => Promise<void>,\n    variant: ButtonVariant,\n    size?: ButtonProps[\"size\"]\n    payload?: T,\n    className?: string,\n}, State> {\n    state: State = {\n        loading: false\n    };\n\n    private _handleClick = (): void => {\n        this.setState({loading: true}, () => {\n            this.props.onClick(this.props.payload).catch(error => {\n                this.setState(() => {\n                    throw error;\n                });\n            }).finally(() => {\n                this.setState({loading: false});\n            });\n        });\n    };\n\n    render(): ReactNode {\n        return (<Button variant={this.props.variant} size={this.props.size}\n                        className={this.props.className} disabled={this.state.loading}\n                        onClick={this._handleClick}>{this.props.children}</Button>);\n    }\n}\n","import {Amount, CurrencyInfo} from \"./repositories/WalletRepository\";\n\nfunction showMessage(logger: (message?: any, ...optionalParams: any[]) => void = console.log,\n                     message?: any, ...optionalParams: any[]\n): void {\n    logger(message, ...optionalParams);\n    alert(message + \" \" + optionalParams.join(\" \"));\n}\n\nexport function showError(message?: any, ...optionalParams: any[]): void {\n    showMessage(console.error, message, ...optionalParams);\n}\n\nexport function showWarning(message?: any, ...optionalParams: any[]): void {\n    showMessage(console.warn, message, ...optionalParams);\n}\n\nexport function formatAmount(amount: number): string {\n    const fractionDigits = 2;\n    if (amount === 0) {\n        return amount.toString();\n    }\n    if (amount < 1) {\n        // @see https://stackoverflow.com/a/31002148\n        const countOfDecimalZeros = -Math.floor(Math.log10(amount) + 1);\n        return amount.toFixed(countOfDecimalZeros + fractionDigits * 2);\n    }\n\n    return amount.toFixed(fractionDigits);\n}\n\nexport function convertAmountToCurrency(exchangeRates: Map<string, CurrencyInfo>, amount: Amount, symbol: string): number {\n    if (amount.amount === 0) {\n        return 0;\n    }\n    return amount.amount / getRelativeExchangeRate(exchangeRates, symbol, amount.symbol);\n}\n\nexport async function delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function getRelativeExchangeRate(exchangeRates: Map<string, CurrencyInfo>, symbol1: string, symbol2: string) {\n    const cur1 = exchangeRates.get(symbol1);\n    const cur2 = exchangeRates.get(symbol2);\n    if (cur1 === undefined || cur2 === undefined) {\n        throw new Error(`Wrong currency symbols: \"${symbol1}\" or \"${symbol2}\"!`);\n    }\n\n    return (cur2.value / cur1.value);\n}\n","import React, {ReactNode} from \"react\";\nimport {LoadingButton} from \"./Utils/LoadingButton\";\nimport {showError} from \"../helpers\";\nimport {WalletRepository} from \"../repositories/WalletRepository\";\n\nexport class ExchangeRatesUpdater extends React.Component<{\n    dbRepository: WalletRepository,\n    ratesLastUpdateTimestamp: number,\n    loadFreshExchangeRates: (dbRepository: WalletRepository) => Promise<void>\n    onChange: () => void,\n}> {\n    private handleClick = async () => {\n        try {\n            await this.props.loadFreshExchangeRates(this.props.dbRepository);\n            this.props.onChange();\n        } catch (error) {\n            showError(error);\n        }\n    };\n\n    render(): ReactNode {\n        return (\n            <div className={\"card mb-3\"}>\n                <div className={\"row card-body\"}>\n                    <div className={\"col-12 col-md-8 mb-1 mb-md-0\"}>\n                        <h5 className={\"card-title\"}>Date of the last exchange rates update:</h5>\n                        <h6 className={\"card-subtitle text-muted\"}>\n                            {(new Date(this.props.ratesLastUpdateTimestamp)).toLocaleString()}\n                        </h6>\n                    </div>\n                    <div className={\"col-12 col-md-4 d-flex justify-content-md-end\"}>\n                        <LoadingButton variant={\"primary\"} onClick={this.handleClick}>\n                            🗘 Update exchange rates\n                        </LoadingButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import {CurrencyInfo, UserRate} from \"../repositories/WalletRepository\";\n\nexport const validator = {\n    amount: async (amount: string): Promise<number> => {\n        const parsed = parseFloat(amount);\n        if (Number.isNaN(parsed) || parsed === 0) {\n            throw new Error(\"Please, enter a valid number!\");\n        }\n        return parsed;\n    },\n    symbol: symbolValidator,\n    symbols: async (symbol1: string, symbol2: string, exchangeRates: Map<string, CurrencyInfo>): Promise<UserRate> => {\n        await symbolValidator(symbol1, exchangeRates);\n        await symbolValidator(symbol2, exchangeRates);\n        if (symbol1 === symbol2) {\n            throw new Error(\"Please, select different currencies!\");\n        }\n        return {\n            symbol1: symbol1,\n            symbol2: symbol2,\n        };\n    },\n    comment: async (comment: string): Promise<string | undefined> => {\n        const trimmedComment = comment.trim();\n        return trimmedComment === \"\" ? undefined : trimmedComment;\n    }\n};\n\nasync function symbolValidator(symbol: string, exchangeRates: Map<string, CurrencyInfo>): Promise<string> {\n    if (!exchangeRates.get(symbol)) {\n        throw new Error(`Wrong currency symbol: \"${symbol}\"!`);\n    }\n    return symbol;\n}\n","import React, {ReactNode} from \"react\";\nimport {Amount, CurrencyInfo, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {validator} from \"../../validation/Validator\";\nimport {Button} from \"react-bootstrap\";\n\ninterface State {\n    amountFormData?: string,\n    amountFormError?: Error,\n}\n\nexport class AmountQuantityTd extends React.Component<{\n    dbRepository: WalletRepository,\n    amountId: number,\n    amount: Amount,\n    amountCurrencyInfo: CurrencyInfo,\n    onChange: () => void,\n}, State> {\n    private defaultState: State = {\n        amountFormData: undefined,\n        amountFormError: undefined,\n    };\n    state: State = this.defaultState;\n\n    private handleFormSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        if (!this.state.amountFormData) {\n            throw new Error(\"Amount is invalid\");\n        }\n\n        // validate\n        validator.amount(this.state.amountFormData).then((validatedAmount: number) => {\n            const clonedAmount = Object.assign({}, this.props.amount);\n            clonedAmount.amount = validatedAmount;\n            return this.props.dbRepository.putAmount(clonedAmount, this.props.amountId);\n        }).then(() => {\n            this.setState(this.defaultState);\n            this.props.onChange();\n            console.debug(\"Amount has been updated.\");\n        }).catch((error: Error) => {\n            this.setState({amountFormError: error});\n        });\n    };\n\n    private handleFormChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({amountFormData: event.target.value});\n    };\n\n    private showForm = () => {\n        this.setState({amountFormData: this.props.amount.amount.toString()});\n    };\n\n    private showQuantity = () => {\n        this.setState(this.defaultState);\n    };\n\n    render(): ReactNode {\n        if (this.state.amountFormData !== undefined) {\n            return (\n                <td>\n                    <form onSubmit={this.handleFormSubmit}>\n                        <div>\n                            <input type=\"number\"\n                                   className={`form-control mb-2 ${this.state.amountFormError ? \"is-invalid\" : \"\"}`}\n                                   placeholder=\"Enter amount\"\n                                   value={this.state.amountFormData}\n                                   onChange={this.handleFormChange}/>\n                            <div className={\"invalid-feedback\"}>\n                                {this.state.amountFormError?.message}\n                            </div>\n                        </div>\n                        <button type={\"button\"} className={\"btn btn-sm btn-secondary mb-2 me-2\"}\n                                onClick={this.showQuantity}>\n                            Cancel\n                        </button>\n                        <Button type={\"submit\"} className={\"btn btn-sm btn-warning mb-2\"}>Update</Button>\n                    </form>\n                </td>\n            );\n        }\n\n        return (\n            <td className={\"text-nowrap\"} title={this.props.amountCurrencyInfo.name}\n                onClick={this.showForm}>\n                {`${this.props.amount.amount} ${this.props.amountCurrencyInfo.unit}`}\n            </td>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {Amount, CurrencyInfo, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {LoadingButton} from \"../Utils/LoadingButton\";\nimport {convertAmountToCurrency, formatAmount} from \"../../helpers\";\nimport {AmountQuantityTd} from \"./AmountQuantityTd\";\n\nexport class AmountRow extends React.Component<{\n    dbRepository: WalletRepository,\n    amountId: number,\n    amount: Amount,\n    exchangeRates: Map<string, CurrencyInfo>,\n    selectedCurrencySymbol: string,\n    onChange: () => void,\n}> {\n    private deleteAmount = async (): Promise<void> => {\n        if (confirm(this.getAmountDeletionMsg(this.props.amount))) {\n            await this.props.dbRepository.deleteAmount(this.props.amountId);\n            console.debug(`Amount with key \"${this.props.amountId}\" has been deleted.`, this.props.amount);\n            this.props.onChange();\n        }\n    };\n\n    private getAmountDeletionMsg(amount: Amount): string {\n        const unit = this.props.exchangeRates.get(amount.symbol)!.unit;\n        let msg = `Are you sure you want to delete ${amount.amount} ${unit} `;\n        msg += amount.comment === undefined ? \"?\" : `(${amount.comment}) ?`;\n\n        return msg;\n    }\n\n    private switchAmountStatus: React.ChangeEventHandler<HTMLInputElement> = event => {\n        const clonedAmount = Object.assign({}, this.props.amount);\n        clonedAmount.enabled = !clonedAmount.enabled;\n\n        this.props.dbRepository.putAmount(clonedAmount, this.props.amountId)\n            .then(this.props.onChange).catch(error => {\n            this.setState(() => {\n                throw error;\n            });\n        });\n    };\n\n    render(): ReactNode {\n        const currencyInfo = this.props.exchangeRates.get(this.props.amount.symbol)!;\n        const selectedCurrencyInfo = this.props.exchangeRates.get(this.props.selectedCurrencySymbol)!;\n        const amountInSelectedCurrency = convertAmountToCurrency(\n            this.props.exchangeRates,\n            this.props.amount,\n            selectedCurrencyInfo.symbol\n        );\n\n        return (\n            <tr className={this.props.amount.enabled ? undefined : \"disabled\"}>\n                <AmountQuantityTd dbRepository={this.props.dbRepository} amountId={this.props.amountId}\n                                  amount={this.props.amount} amountCurrencyInfo={currencyInfo}\n                                  onChange={this.props.onChange}/>\n                <td className={\"text-nowrap\"}>\n                    {formatAmount(amountInSelectedCurrency)} {selectedCurrencyInfo.unit}\n                </td>\n                <td style={{whiteSpace: \"pre-line\"}}>{this.props.amount.comment ?? \"\"}</td>\n                <td className={\"text-center w-auto\"}>\n                    <div className={\"form-switch\"}>\n                        <input type={\"checkbox\"} role={\"switch\"} className={\"form-check-input\"}\n                               checked={this.props.amount.enabled}\n                               onChange={this.switchAmountStatus}/>\n                    </div>\n                </td>\n                <td className={\"text-center w-auto\"}>\n                    <LoadingButton variant={\"secondary\"} size={\"sm\"}\n                                   onClick={this.deleteAmount}>Delete</LoadingButton>\n                </td>\n            </tr>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {CurrencyInfo} from \"../../repositories/WalletRepository\";\nimport {Form} from \"react-bootstrap\";\n\nexport class CurrencySelect extends React.Component<{\n    exchangeRates: Map<string, CurrencyInfo>,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    value: string,\n    isInvalid?: boolean,\n    className?: string,\n}> {\n    render(): ReactNode {\n        const options = [];\n        for (const [, rate] of this.props.exchangeRates.entries()) {\n            options.push(\n                <option key={rate.symbol} value={rate.symbol}>\n                    {`${rate.symbol} - ${rate.name}`}\n                </option>\n            );\n        }\n\n        return (\n            <Form.Control as={\"select\"} className={this.props.className}\n                          isInvalid={this.props.isInvalid}\n                          disabled={this.props.exchangeRates.size === 0}\n                          value={this.props.value} onChange={this.props.onChange}>\n                {options}\n            </Form.Control>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {CurrencySelect} from \"../Utils/CurrencySelect\";\nimport {Amount, CurrencyInfo, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {convertAmountToCurrency, formatAmount} from \"../../helpers\";\n\nexport class AmountTotalRow extends React.Component<{\n    dbRepository: WalletRepository,\n    amounts: Map<number, Amount>,\n    exchangeRates: Map<string, CurrencyInfo>,\n    selectedCurrencySymbol: string,\n    onSelectedCurrencyChange: () => void,\n}> {\n    private updateSelectedCurrency = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        this.props.dbRepository.setConfig({\n            key: \"selected_currency\",\n            value: event.target.value\n        }).then(() => {\n            this.props.onSelectedCurrencyChange();\n        }).catch(error => {\n            this.setState(() => {\n                throw error;\n            });\n        });\n    };\n\n    private calculateTotalSum(): number {\n        const selectedCurrencyInfo = this.props.exchangeRates.get(this.props.selectedCurrencySymbol)!;\n        let resultSum = 0;\n        for (const amount of this.props.amounts.values()) {\n            if (amount.enabled) {\n                resultSum += convertAmountToCurrency(this.props.exchangeRates, amount, selectedCurrencyInfo.symbol);\n            }\n        }\n        return resultSum;\n    }\n\n    render(): ReactNode {\n        const selectedCurrencyInfo = this.props.exchangeRates.get(this.props.selectedCurrencySymbol)!;\n        return (\n            <tr>\n                <th>Total:</th>\n                <td className={\"text-nowrap\"}>\n                    {formatAmount(this.calculateTotalSum())} {selectedCurrencyInfo.unit}\n                </td>\n                <td colSpan={3}>\n                    <CurrencySelect className={\"form-select\"}\n                                    exchangeRates={this.props.exchangeRates}\n                                    value={selectedCurrencyInfo.symbol} onChange={this.updateSelectedCurrency}/>\n                </td>\n            </tr>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {CurrencySelect} from \"../Utils/CurrencySelect\";\nimport {Amount, CurrencyInfo, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {validator} from \"../../validation/Validator\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\n\ninterface ValidationErrors {\n    amountError?: Error,\n    symbolError?: Error,\n}\n\ninterface State extends ValidationErrors {\n    isModalShown: boolean,\n    amount: string,\n    symbol: string,\n    comment: string,\n}\n\nexport class AddNewAmount extends React.Component<{\n    dbRepository: WalletRepository,\n    exchangeRates: Map<string, CurrencyInfo>,\n    onChange: () => void,\n    className?: string,\n}, State> {\n    private idPrefix = `${this.constructor.name}_`;\n    private ids = {\n        amount: `${this.idPrefix}amount`,\n        symbol: `${this.idPrefix}symbol`,\n        comment: `${this.idPrefix}comment`,\n    };\n\n    private initialState: State = {\n        isModalShown: false,\n        amount: \"\",\n        symbol: this.props.exchangeRates.keys().next().value,\n        comment: \"\",\n        amountError: undefined,\n        symbolError: undefined,\n    };\n    state: State = this.initialState;\n\n    /**\n     * Validate and preprocess form data.\n     */\n    private async validate(): Promise<Amount> {\n        return new Promise((resolve, reject) => {\n            const result: Partial<Amount> = {enabled: true};\n            const errors: ValidationErrors = {};\n\n            Promise.allSettled([\n                validator.amount(this.state.amount),\n                validator.symbol(this.state.symbol, this.props.exchangeRates),\n                validator.comment(this.state.comment),\n            ]).then(([amount, symbol, comment]) => {\n                amount.status === \"fulfilled\" ? result.amount = amount.value : errors.amountError = amount.reason;\n                symbol.status === \"fulfilled\" ? result.symbol = symbol.value : errors.amountError = symbol.reason;\n                comment.status === \"fulfilled\" ? result.comment = comment.value : errors.amountError = comment.reason;\n\n                if (errors.amountError || errors.symbolError) {\n                    reject(errors);\n                    return;\n                }\n                resolve(result as Amount);\n            });\n        });\n    }\n\n    private handleFormSubmit = (event: React.FormEvent): void => {\n        event.preventDefault();\n        this.addAmount().catch((errors: ValidationErrors | Error) => {\n            if (errors instanceof Error) {\n                console.error(\"Unexpected error:\", errors);\n                this.setState(() => {\n                    throw errors;\n                });\n                return;\n            }\n            this.setState(errors);\n        });\n    };\n\n    private async addAmount(): Promise<void> {\n        const amount = await this.validate();\n        const addedRowKey = await this.props.dbRepository.putAmount(amount);\n        this.setState(this.initialState);\n        this.props.onChange();\n        console.debug(\"Added amount with key:\", addedRowKey);\n    }\n\n    private handleFormChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value: string = event.target.value;\n        switch (event.target.id) {\n            case this.ids.amount:\n                this.setState({amount: value, amountError: undefined});\n                break;\n            case this.ids.symbol:\n                this.setState({symbol: value, symbolError: undefined});\n                break;\n            case this.ids.comment:\n                this.setState({comment: value});\n                break;\n        }\n    };\n\n    private hideModal = () => {\n        this.setState({isModalShown: false});\n    };\n\n    private showModal = () => {\n        this.setState({isModalShown: true});\n    };\n\n    render(): ReactNode {\n        return (\n            <React.Fragment>\n                <Modal show={this.state.isModalShown}\n                       backdrop={\"static\"} keyboard={false}\n                       centered={true}\n                       onHide={this.hideModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add new amount</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleFormSubmit}>\n                            <Form.Group className={\"mb-3\"} controlId={this.ids.amount}>\n                                <Form.Label>Amount:</Form.Label>\n                                <Form.Control type=\"number\"\n                                              placeholder=\"Enter amount\"\n                                              isInvalid={this.state.amountError !== undefined}\n                                              value={this.state.amount}\n                                              onChange={this.handleFormChange}/>\n                                <Form.Control.Feedback type={\"invalid\"}>\n                                    {this.state.amountError?.message}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group className={\"mb-3\"} controlId={this.ids.symbol}>\n                                <Form.Label>Currency:</Form.Label>\n                                <CurrencySelect isInvalid={this.state.symbolError !== undefined}\n                                                exchangeRates={this.props.exchangeRates}\n                                                value={this.state.symbol}\n                                                onChange={this.handleFormChange}/>\n                                <Form.Control.Feedback type={\"invalid\"}>\n                                    {this.state.symbolError?.message}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group className={\"mb-3\"} controlId={this.ids.comment}>\n                                <Form.Label>Comment:</Form.Label>\n                                <Form.Control type=\"text\"\n                                              as={\"textarea\"}\n                                              value={this.state.comment}\n                                              onChange={this.handleFormChange}/>\n                            </Form.Group>\n                            <Button type={\"button\"} variant={\"secondary\"}\n                                    className={\"me-2\"}\n                                    onClick={this.hideModal}>Cancel</Button>\n                            <Button type=\"submit\" variant={\"primary\"}\n                                    disabled={this.props.exchangeRates.size === 0}>Add</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <Button variant=\"primary\" className={this.props.className} onClick={this.showModal}>Add amount</Button>\n            </React.Fragment>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {Amount, CurrencyInfo, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {AmountRow} from \"./AmountRow\";\nimport {AmountTotalRow} from \"./AmountTotalRow\";\nimport {AddNewAmount} from \"./AddNewAmount\";\n\nexport class AmountsTable extends React.Component<{\n    dbRepository: WalletRepository,\n    amounts: Map<number, Amount>,\n    exchangeRates: Map<string, CurrencyInfo>,\n    selectedCurrencySymbol: string,\n    onAmountsChange: () => void,\n    onSelectedCurrencyChange: () => void,\n}> {\n    render(): ReactNode {\n        const selectedCurrencyInfo = this.props.exchangeRates.get(this.props.selectedCurrencySymbol)!;\n\n        // Add new rows.\n        const amounts = [];\n        for (const [id, amount] of this.props.amounts.entries()) {\n            amounts.push(\n                <AmountRow key={id} dbRepository={this.props.dbRepository} amountId={id} amount={amount}\n                           exchangeRates={this.props.exchangeRates}\n                           selectedCurrencySymbol={this.props.selectedCurrencySymbol}\n                           onChange={this.props.onAmountsChange}/>\n            );\n        }\n\n        return (\n            <div>\n                <h2>Your wallet</h2>\n                <AddNewAmount className={\"mb-2\"}\n                              dbRepository={this.props.dbRepository} exchangeRates={this.props.exchangeRates}\n                              onChange={this.props.onAmountsChange}/>\n                <div className={\"table-responsive\"}>\n                    <table className={\"table table-bordered align-middle\"}>\n                        <thead>\n                        <tr>\n                            <th>Amount</th>\n                            <th className={\"text-nowrap\"}>\n                                Amount in {selectedCurrencyInfo.unit}\n                            </th>\n                            <th>Comment</th>\n                            <th colSpan={2}>Actions</th>\n                        </tr>\n                        </thead>\n                        <tfoot>\n                        <AmountTotalRow dbRepository={this.props.dbRepository} amounts={this.props.amounts}\n                                        exchangeRates={this.props.exchangeRates}\n                                        selectedCurrencySymbol={this.props.selectedCurrencySymbol}\n                                        onSelectedCurrencyChange={this.props.onSelectedCurrencyChange}/>\n                        </tfoot>\n                        <tbody>{amounts}</tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n","export class CoingeckoRepository {\n    private apiDomain: string = \"https://api.coingecko.com/api/v3\";\n\n    async getSupportedVsCurrencies(): Promise<string[]> {\n        return await this.request(\"/simple/supported_vs_currencies\");\n    }\n\n    async getExchangeRates(): Promise<Map<string, BtcRate>> {\n        const plainRates = (await this.request(\"/exchange_rates\"))[\"rates\"];\n        return new Map(Object.entries(plainRates));\n    }\n\n    private async request(url: string): Promise<any> {\n        const response: Response = await fetch(this.apiDomain + url, {headers: {\"Accept\": \"application/json\"}});\n        if (response.status !== 200) {\n            throw new Error(`Wrong API response code (${response.status})`);\n        }\n        return await response.json();\n    }\n}\n\nexport interface BtcRate {\n    name: string,\n    unit: string,\n    value: number,\n    type: \"fiat\" | \"crypto\" | \"commodity\",\n}\n","import React, {ReactNode} from \"react\";\nimport {CurrencyInfo, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {CurrencySelect} from \"../Utils/CurrencySelect\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport {validator} from \"../../validation/Validator\";\n\ninterface State {\n    isModalShown: boolean,\n    symbol1: string,\n    symbol2: string,\n    validationError?: Error,\n}\n\nexport class AddNewRate extends React.Component<{\n    dbRepository: WalletRepository,\n    exchangeRates: Map<string, CurrencyInfo>,\n    onChange: () => void,\n    className?: string,\n}, State> {\n    private idPrefix = `${this.constructor.name}_`;\n    private ids = {\n        symbol1: `${this.idPrefix}symbol1`,\n        symbol2: `${this.idPrefix}symbol2`\n    };\n\n    private initialState: State = {\n        isModalShown: false,\n        symbol1: this.props.exchangeRates.keys().next().value,\n        symbol2: this.props.exchangeRates.keys().next().value,\n        validationError: undefined,\n    };\n    state: State = this.initialState;\n\n    private handleFormSubmit = (event: React.FormEvent): void => {\n        event.preventDefault();\n        this.addNewRate().catch(error => {\n            this.setState({validationError: error});\n        });\n    };\n\n    private addNewRate = async (): Promise<void> => {\n        const validatedSymbols = await validator.symbols(this.state.symbol1, this.state.symbol2, this.props.exchangeRates);\n        const addedKey = await this.props.dbRepository.addUserRate(validatedSymbols);\n        this.setState(this.initialState);\n        this.props.onChange();\n        console.debug(\"New user exchange rate added\", addedKey);\n    };\n\n    private handleFormChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value: string = event.target.value;\n        switch (event.target.id) {\n            case this.ids.symbol1:\n                this.setState({symbol1: value, validationError: undefined});\n                break;\n            case this.ids.symbol2:\n                this.setState({symbol2: value, validationError: undefined});\n                break;\n        }\n    };\n\n    private hideModal = () => {\n        this.setState({isModalShown: false});\n    };\n\n    private showModal = () => {\n        this.setState({isModalShown: true});\n    };\n\n    render(): ReactNode {\n        return (\n            <React.Fragment>\n                <Modal show={this.state.isModalShown}\n                       backdrop=\"static\" keyboard={false}\n                       centered={true}\n                       onHide={this.hideModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add favorite exchange rate</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleFormSubmit}>\n                            <Form.Group className={\"mb-3\"} controlId={this.ids.symbol1}>\n                                <Form.Label>First currency:</Form.Label>\n                                <CurrencySelect isInvalid={this.state.validationError !== undefined}\n                                                exchangeRates={this.props.exchangeRates}\n                                                value={this.state.symbol1}\n                                                onChange={this.handleFormChange}/>\n                                <Form.Control.Feedback type={\"invalid\"}>\n                                    {this.state.validationError?.message}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group className={\"mb-3\"} controlId={this.ids.symbol2}>\n                                <Form.Label>Second currency:</Form.Label>\n                                <CurrencySelect isInvalid={this.state.validationError !== undefined}\n                                                exchangeRates={this.props.exchangeRates}\n                                                value={this.state.symbol2}\n                                                onChange={this.handleFormChange}/>\n                                <Form.Control.Feedback type={\"invalid\"}>\n                                    {this.state.validationError?.message}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Button type={\"button\"} variant={\"secondary\"}\n                                    className={\"me-2\"}\n                                    onClick={this.hideModal}>Cancel</Button>\n                            <Button type={\"submit\"} variant={\"primary\"}>Add</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <Button variant=\"primary\" className={this.props.className} onClick={this.showModal}>Add rate</Button>\n            </React.Fragment>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {AddNewRate} from \"./AddNewRate\";\nimport {CurrencyInfo, UserRate, WalletRepository} from \"../../repositories/WalletRepository\";\nimport {LoadingButton} from \"../Utils/LoadingButton\";\nimport {formatAmount, getRelativeExchangeRate, showError} from \"../../helpers\";\n\ninterface State {\n    userRates?: Map<number, UserRate>,\n}\n\nexport class UserRatesTable extends React.Component<{\n    dbRepository: WalletRepository,\n    exchangeRates: Map<string, CurrencyInfo>,\n}, State> {\n    state: State = {\n        userRates: undefined,\n    };\n\n    private onUserRatesChanged = (): void => {\n        this.props.dbRepository.getUserRates().then((rates: Map<number, UserRate>) => {\n            this.setState({userRates: rates});\n        }).catch((error: Error) => {\n            showError(\"Unable to update favorite exchange rates!\", error);\n        });\n    };\n\n    private deleteUserRate = async (rateId?: number) => {\n        const rate = this.state.userRates?.get(rateId!)!;\n        if (confirm(`Are you sure you want to delete \"${rate.symbol1}/${rate.symbol2}\" pair?`)) {\n            this.props.dbRepository.deleteUserRate(rateId!).then(() => {\n                this.onUserRatesChanged();\n                console.debug(`Favorite exchange rates pair with key \"${rateId}\" has been deleted.`);\n            }).catch((error: Error) => {\n                showError(\"Unable to delete favorite rates pair!\", error);\n            });\n        }\n    };\n\n    componentDidMount(): void {\n        if (!this.state.userRates) {\n            this.onUserRatesChanged();\n        }\n    }\n\n    render(): ReactNode {\n        const ratesRows: ReactNode[] = [];\n        if (this.state.userRates) {\n            for (const [id, rate] of this.state.userRates) {\n                const currInfo1 = this.props.exchangeRates.get(rate.symbol1)!;\n                const currInfo2 = this.props.exchangeRates.get(rate.symbol2)!;\n                ratesRows.push(\n                    <tr key={id}>\n                        <td className={\"text-nowrap\"} title={`${currInfo1.name} / ${currInfo2.name}`}>\n                            {rate.symbol1}/{rate.symbol2}\n                        </td>\n                        <td className={\"text-nowrap\"}>\n                            {formatAmount(getRelativeExchangeRate(this.props.exchangeRates, rate.symbol1, rate.symbol2))}\n                            {\" \"}{currInfo2.unit}\n                        </td>\n                        <td className={\"text-center\"}>\n                            <LoadingButton<number> payload={id}\n                                                   variant={\"secondary\"} size={\"sm\"}\n                                                   onClick={this.deleteUserRate}>Delete</LoadingButton>\n                        </td>\n                    </tr>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <h2 className={\"card-title\"}>Exchange rates</h2>\n                <AddNewRate className={\"mb-2\"}\n                            dbRepository={this.props.dbRepository} exchangeRates={this.props.exchangeRates}\n                            onChange={this.onUserRatesChanged}/>\n                <div className={\"table-responsive\"}>\n                    <table className={\"table table-bordered align-middle\"}>\n                        <thead>\n                        <tr>\n                            <th>Pair</th>\n                            <th>Cost</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>{ratesRows}</tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {lazy, ReactNode} from \"react\";\n\nexport type ThemeName = \"default_bootstrap\" | \"journal\" | \"material\" | \"slate\" | \"solar\"\n\ninterface Props {\n    lightTheme: ThemeName,\n    darkTheme: ThemeName,\n    children: ReactNode,\n    fallback?: ReactNode,\n}\n\ninterface State {\n    isDarkMode: boolean;\n}\n\n/**\n * Bootstrap doesn't have builtin functionality for changing themes.\n * So, there is a way to change the theme - reload the whole boostrap.min.css.\n */\nexport class ThemeLoader extends React.Component<Props, State> {\n    private darkModeQuery: string = \"(prefers-color-scheme: dark)\";\n    state: State = {\n        isDarkMode: window.matchMedia(this.darkModeQuery).matches,\n    };\n\n    private darkModeListener = (event: MediaQueryListEvent) => {\n        this.setState({isDarkMode: event.matches});\n    };\n\n    componentDidMount() {\n        window.matchMedia(this.darkModeQuery).addEventListener(\"change\", this.darkModeListener);\n        console.log(\"Listener was added.\");\n    }\n\n    componentWillUnmount() {\n        window.matchMedia(this.darkModeQuery).removeEventListener(\"change\", this.darkModeListener);\n        console.log(\"Listener was removed.\");\n    }\n\n    /**\n     * @TODO: При текущем подходе при загрузке модуля webpack не выгружает загруженный до этого css.\n     * @TODO: Таким образом, при каждой загрузке стили просто дублируются несколько раз.\n     * @TODO:\n     * @TODO: По всей видимости, необходимо извлекать css-файлы тем в отдельные файлы (MiniCssExtractPlugin).\n     * @TODO: И затем заменять в рантайме непосредственно ссылку на css,\n     * @TODO: например, с помощью React Helmet.\n     * @TODO: (Вместо подгрузки js-модулей, содержащих css-стили).\n     */\n    private loadTheme(name: ThemeName): ReactNode {\n        switch (name) {\n            case \"default_bootstrap\":\n                return React.createElement(lazy(() => import(\"./DefaultBootstrapTheme\")));\n            case \"journal\":\n                return React.createElement(lazy(() => import(\"./JournalTheme\")));\n            case \"material\":\n                return React.createElement(lazy(() => import(\"./MaterialTheme\")));\n            case \"slate\":\n                return React.createElement(lazy(() => import(\"./SlateTheme\")));\n            case \"solar\":\n                return React.createElement(lazy(() => import(\"./SolarTheme\")));\n            default:\n                throw Error(`Invalid theme name: \"${this.props.lightTheme}\"`);\n        }\n    }\n\n    render(): ReactNode {\n        return (\n            <React.Suspense fallback={this.props.fallback}>\n                {this.loadTheme(this.state.isDarkMode ? this.props.darkTheme : this.props.lightTheme)}\n                {this.props.children}\n            </React.Suspense>\n        );\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport {Amount, CurrencyInfo, WalletRepository} from \"../repositories/WalletRepository\";\nimport {ExchangeRatesUpdater} from \"./ExchangeRatesUpdater\";\nimport {AmountsTable} from \"./Amounts/AmountsTable\";\nimport {LoadingButton} from \"./Utils/LoadingButton\";\nimport {CoingeckoRepository} from \"../repositories/CoingeckoRepository\";\nimport {UserRatesTable} from \"./UserRates/UserRatesTable\";\nimport {ThemeLoader, ThemeName} from \"./Themes/ThemeLoader\";\nimport {Button} from \"react-bootstrap\";\n\ninterface State {\n    theme: ThemeName,\n    amounts: Map<number, Amount>,\n    exchangeRates: Map<string, CurrencyInfo>,\n    dbRepository?: WalletRepository,\n    ratesLastUpdateTimestamp?: number,\n    selectedCurrencySymbol?: string,\n}\n\nexport default class App extends React.Component<{}, State> {\n    private defaultCurrency = \"usd\";\n    private coingeckoRepository = new CoingeckoRepository();\n\n    state: State = {\n        theme: \"material\",\n        amounts: new Map(),\n        exchangeRates: new Map(),\n    };\n\n    private deleteDb = async (): Promise<void> => {\n        const dbRepository = this.state.dbRepository!;\n        if (confirm(\"Are you sure you want to delete the local DB?\")) {\n            await dbRepository.deleteIndexedDB();\n            console.warn(`Database \"${dbRepository.dbName}\" has been deleted.`);\n            await this.initialize();\n        }\n    };\n\n    private onDbDataChanged = (): void => {\n        this.loadDbData(this.state.dbRepository!).then(data => {\n            this.setState(data, () => console.log(\"DB data were changed.\"));\n        }).catch(error => {\n            this.setState(() => {\n                throw error;\n            });\n        });\n    };\n\n    private loadFreshExchangeRates = async (dbRepository: WalletRepository): Promise<void> => {\n        try {\n            const rawRates = await this.coingeckoRepository.getExchangeRates();\n            await dbRepository.updateExchangeRates(rawRates);\n            console.debug(\"Fresh exchange rates were loaded from coingecko and saved into the DB.\");\n        } catch (error) {\n            throw new Error(`Unable to load fresh exchange rates: ${error}`);\n        }\n    };\n\n    private async loadDbData(dbRepository: WalletRepository): Promise<State> {\n        const [amounts, rates, timestamp, selectedCurrency] = await Promise.all([\n            dbRepository.getAmounts(),\n            dbRepository.getExchangeRates(),\n            dbRepository.getConfig(\"last_update_timestamp\"),\n            dbRepository.getConfig(\"selected_currency\"),\n        ]);\n        return {\n            theme: \"material\",\n            dbRepository: dbRepository,\n            amounts: amounts,\n            exchangeRates: rates,\n            ratesLastUpdateTimestamp: timestamp,\n            selectedCurrencySymbol: selectedCurrency,\n        };\n    }\n\n    private async initialize() {\n        const dbRepository = new WalletRepository();\n        await dbRepository.open(async (error: Error) => {\n            this.setState(() => {\n                throw error;\n            });\n        });\n\n        // Load data for the first time.\n        const data = await this.loadDbData(dbRepository);\n        if (data.exchangeRates.size === 0) {\n            await this.loadFreshExchangeRates(dbRepository);\n        }\n        if (!data.selectedCurrencySymbol) {\n            await dbRepository.setConfig({\n                key: \"selected_currency\",\n                value: this.defaultCurrency\n            });\n        }\n\n        // Load the updated data for the second time.\n        this.setState(await this.loadDbData(dbRepository), () => {\n            console.info(\"App data were initialized.\");\n        });\n    }\n\n    componentDidMount() {\n        console.debug(`Component \"${this.constructor.name}\" was mounted.`);\n        document.title = \"Multi-currency Wallet\";\n\n        if (!this.state.dbRepository) {\n            this.initialize().catch(error => {\n                this.setState(() => {\n                    throw error;\n                });\n            });\n        }\n    }\n\n    private changeTheme = () => {\n        this.setState({theme: \"slate\"});\n    };\n\n    render() {\n        if (!this.state.dbRepository || !this.state.ratesLastUpdateTimestamp || !this.state.selectedCurrencySymbol) {\n            return (<DbLoadingFallback/>);\n        }\n        return (\n            <ThemeLoader lightTheme={\"material\"} darkTheme={\"slate\"} fallback={<ThemeLoadingFallback/>}>\n                <div className={\"container-lg mt-2 mb-2\"}>\n                    <h1>Multi-currency Wallet</h1>\n                    <ExchangeRatesUpdater dbRepository={this.state.dbRepository}\n                                          ratesLastUpdateTimestamp={this.state.ratesLastUpdateTimestamp}\n                                          loadFreshExchangeRates={this.loadFreshExchangeRates}\n                                          onChange={this.onDbDataChanged}/>\n                    <div className={\"row\"}>\n                        <div className={\"col-12 col-lg-4\"}>\n                            <UserRatesTable dbRepository={this.state.dbRepository}\n                                            exchangeRates={this.state.exchangeRates}/>\n                        </div>\n                        <div className={\"col-12 col-lg-8\"}>\n                            <AmountsTable dbRepository={this.state.dbRepository}\n                                          amounts={this.state.amounts}\n                                          exchangeRates={this.state.exchangeRates}\n                                          selectedCurrencySymbol={this.state.selectedCurrencySymbol}\n                                          onAmountsChange={this.onDbDataChanged}\n                                          onSelectedCurrencyChange={this.onDbDataChanged}/>\n                        </div>\n                    </div>\n                    <LoadingButton variant={\"danger\"} onClick={this.deleteDb}>⚠ Clear DB</LoadingButton>\n                    <Button variant={\"info\"} onClick={this.changeTheme}>Change theme</Button>\n                </div>\n            </ThemeLoader>\n        );\n    }\n}\n\nclass DbLoadingFallback extends React.Component {\n    render(): ReactNode {\n        return (\n            <div>\n                Database loading...\n            </div>\n        );\n    }\n}\n\nclass ThemeLoadingFallback extends React.Component {\n    render(): ReactNode {\n        return (\n            <div>\n                Theme loading...\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {createRoot} from \"react-dom/client\";\nimport {TopLevelErrorBoundary} from \"./components/TopLevelErrorBoundary\";\nimport App from \"./components/App\";\nimport \"./styles/style.css\";\n\nconst container = document.createElement(\"main\");\ndocument.body.append(container);\nconst root = createRoot(container);\nroot.render(\n    <TopLevelErrorBoundary>\n        <App/>\n    </TopLevelErrorBoundary>\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".chunk-bundle.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(!/^(142|345|388|63|843)$/.test(chunkId)) {\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfinance_app\"] = self[\"webpackChunkfinance_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [686], function() { return __webpack_require__(16); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","loadStylesheet","installedCssChunks","TopLevelErrorBoundary","state","static","error","componentDidCatch","errorInfo","console","render","this","name","message","props","children","WalletRepository","open","onUpgradeError","Promise","resolve","reject","request","indexedDB","dbName","dbVersion","onupgradeneeded","event","migrateIndexedDB","result","transaction","catch","onblocked","onBlocked","onerror","onsuccess","db","debug","deleteIndexedDB","close","deleteDatabase","deleteByKey","storeName","key","store","objectStore","promiseRequest","delete","getByKey","get","getByKeyOfThrowError","value","Error","promiseCursorRequest","values","Map","cursor","set","continue","body","mode","objectStoreNames","transactionResultPromise","onabort","target","oncomplete","then","msg","warn","alert","oldVersion","newVersion","migrations","getMigrations","i","migration","storeNames","configs","exchangeRates","userRates","amounts","map","createObjectStore","keyPath","autoIncrement","openCursor","amount","enabled","put","getConfig","conf","setConfig","getAmounts","getAmount","putAmount","deleteAmount","getUserRates","addUserRate","rate","add","deleteUserRate","getExchangeRates","updateExchangeRates","data","ratesStore","configStore","entries","info","symbol","unit","type","Date","now","LoadingButton","loading","_handleClick","setState","onClick","payload","finally","Button","variant","size","className","disabled","showError","optionalParams","logger","log","join","showMessage","formatAmount","toString","countOfDecimalZeros","Math","floor","log10","toFixed","fractionDigits","convertAmountToCurrency","getRelativeExchangeRate","symbol1","symbol2","cur1","cur2","undefined","ExchangeRatesUpdater","handleClick","loadFreshExchangeRates","dbRepository","onChange","ratesLastUpdateTimestamp","toLocaleString","validator","parsed","parseFloat","Number","isNaN","symbolValidator","symbols","comment","trimmedComment","trim","AmountQuantityTd","defaultState","amountFormData","amountFormError","handleFormSubmit","preventDefault","validatedAmount","clonedAmount","Object","assign","amountId","handleFormChange","showForm","showQuantity","onSubmit","placeholder","title","amountCurrencyInfo","AmountRow","confirm","getAmountDeletionMsg","switchAmountStatus","currencyInfo","selectedCurrencyInfo","selectedCurrencySymbol","amountInSelectedCurrency","style","whiteSpace","role","checked","CurrencySelect","options","push","Form","as","isInvalid","AmountTotalRow","updateSelectedCurrency","onSelectedCurrencyChange","calculateTotalSum","resultSum","colSpan","AddNewAmount","idPrefix","constructor","ids","initialState","isModalShown","keys","next","amountError","symbolError","addAmount","errors","id","hideModal","showModal","validate","allSettled","status","reason","addedRowKey","Modal","show","backdrop","keyboard","centered","onHide","closeButton","controlId","AmountsTable","onAmountsChange","CoingeckoRepository","apiDomain","getSupportedVsCurrencies","plainRates","url","response","fetch","headers","json","AddNewRate","validationError","addNewRate","validatedSymbols","addedKey","UserRatesTable","onUserRatesChanged","rates","rateId","componentDidMount","ratesRows","currInfo1","currInfo2","ThemeLoader","darkModeQuery","isDarkMode","window","matchMedia","matches","darkModeListener","addEventListener","componentWillUnmount","removeEventListener","loadTheme","lazy","lightTheme","fallback","darkTheme","App","defaultCurrency","coingeckoRepository","theme","deleteDb","initialize","onDbDataChanged","loadDbData","rawRates","changeTheme","timestamp","selectedCurrency","all","document","ThemeLoadingFallback","DbLoadingFallback","container","createElement","append","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","e","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","setTimeout","bind","head","appendChild","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","replace","p","href","fullhref","existingLinkTags","dataHref","tag","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","err","code","createStylesheet","miniCss","installedChunks","installedChunkData","test","promise","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}